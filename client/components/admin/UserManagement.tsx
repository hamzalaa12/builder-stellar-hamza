import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport {\n  Users,\n  Shield,\n  Ban,\n  UserCheck,\n  Search,\n  Trash2,\n  Crown,\n  TrendingUp,\n  Clock,\n  User,\n  MessageSquare,\n  BookOpen,\n  Heart,\n  History,\n  Settings,\n  AlertTriangle,\n} from \"lucide-react\";\nimport {\n  useAuth,\n  roleLabels,\n  rolePermissions,\n  UserRole,\n} from \"@/context/AuthContext\";\nimport {\n  getAllUsers,\n  updateUserRole,\n  banUser,\n  unbanUser,\n  isUserBanned,\n  getBannedUsers,\n  deleteUser,\n  getUserStats,\n  searchUsers,\n  getUsersByRole,\n  notifyAdminsNewUser,\n  type BannedUser,\n} from \"@/lib/userManagement\";\nimport {\n  getPendingCommentReports,\n  getCommentsByUser,\n  banUserFromCommenting,\n  isUserBannedFromCommenting,\n  getCommentStats,\n} from \"@/lib/commentSystem\";\nimport { getUserProfile } from \"@/lib/userData\";\n\nexport default function UserManagement() {\n  const { user } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [users, setUsers] = useState<any[]>([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedRole, setSelectedRole] = useState<string>(\"all\");\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [isManageUserOpen, setIsManageUserOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [userToDelete, setUserToDelete] = useState<any>(null);\n  const [commentStats, setCommentStats] = useState<any>({});\n  const [bannedUsers, setBannedUsers] = useState<BannedUser[]>([]);\n\n  useEffect(() => {\n    loadUserData();\n  }, []);\n\n  const loadUserData = () => {\n    // Load users with comprehensive stats\n    const allUsers = getAllUsers();\n    const usersWithStats = allUsers.map((u) => {\n      const stats = getUserStats(u.id);\n      const profile = getUserProfile(u.id);\n      const banned = isUserBanned(u.id);\n      const commentBanned = isUserBannedFromCommenting(u.id);\n      const userComments = getCommentsByUser(u.id);\n      \n      return {\n        ...u,\n        stats: stats?.stats || {},\n        profile: stats?.profile || profile,\n        favoritesCount: stats?.favoritesCount || 0,\n        readingHistoryCount: stats?.readingHistoryCount || 0,\n        commentsCount: userComments.length,\n        activeCommentsCount: userComments.filter(c => c.status === \"active\").length,\n        isBanned: !!banned,\n        banInfo: banned,\n        isCommentBanned: commentBanned,\n        lastActive: profile?.lastActive || u.lastLogin,\n        joinedDaysAgo: Math.floor(\n          (Date.now() - new Date(u.createdAt).getTime()) / (1000 * 60 * 60 * 24)\n        ),\n      };\n    });\n    setUsers(usersWithStats);\n\n    // Load comment statistics\n    setCommentStats(getCommentStats());\n\n    // Load banned users\n    setBannedUsers(getBannedUsers().filter(b => b.isActive));\n  };\n\n  const handleRoleChange = (userId: string, newRole: UserRole) => {\n    if (!user) return;\n    if (updateUserRole(userId, newRole, user.id)) {\n      loadUserData();\n    }\n  };\n\n  const handleBanUser = (\n    userId: string,\n    reason: string,\n    duration: \"temporary\" | \"permanent\",\n    days?: number,\n  ) => {\n    if (!user) return;\n    if (banUser(userId, user.id, reason, duration, days)) {\n      loadUserData();\n    }\n  };\n\n  const handleUnbanUser = (userId: string) => {\n    if (!user) return;\n    if (unbanUser(userId, user.id)) {\n      loadUserData();\n    }\n  };\n\n  const handleDeleteUser = (userToDelete: any) => {\n    if (!user) return;\n    if (deleteUser(userToDelete.id, user.id)) {\n      loadUserData();\n      setIsDeleteDialogOpen(false);\n      setUserToDelete(null);\n    }\n  };\n\n  const handleBanFromCommenting = (\n    userId: string,\n    reason: string,\n    duration: \"temporary\" | \"permanent\",\n    days?: number,\n  ) => {\n    if (!user) return;\n    if (banUserFromCommenting(userId, user.id, reason, duration, days)) {\n      loadUserData();\n    }\n  };\n\n  const getFilteredUsers = () => {\n    let filtered = users;\n\n    if (searchQuery) {\n      filtered = searchUsers(searchQuery).map((u) => {\n        const fullUser = users.find((user) => user.id === u.id);\n        return fullUser || u;\n      });\n    }\n\n    if (selectedRole !== \"all\") {\n      filtered = filtered.filter((u) => u.role === selectedRole);\n    }\n\n    return filtered;\n  };\n\n  const UserDetailModal = ({ user: targetUser }: { user: any }) => {\n    const [banReason, setBanReason] = useState(\"\");\n    const [banDuration, setBanDuration] = useState<\"temporary\" | \"permanent\">(\n      \"temporary\",\n    );\n    const [banDays, setBanDays] = useState(7);\n    const [commentBanReason, setCommentBanReason] = useState(\"\");\n    const [action, setAction] = useState<\"view\" | \"ban\" | \"role\" | \"commentBan\">(\n      \"view\",\n    );\n\n    return (\n      <Dialog open={isManageUserOpen} onOpenChange={setIsManageUserOpen}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-3\">\n              <Avatar className=\"h-8 w-8\">\n                <AvatarImage src={targetUser?.profile?.avatar} />\n                <AvatarFallback>\n                  <User className=\"h-4 w-4\" />\n                </AvatarFallback>\n              </Avatar>\n              إدارة المستخدم: {targetUser?.name}\n            </DialogTitle>\n          </DialogHeader>\n\n          <Tabs value={action} onValueChange={(value: any) => setAction(value)}>\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"view\">المعلومات</TabsTrigger>\n              <TabsTrigger value=\"role\">الرتبة</TabsTrigger>\n              <TabsTrigger value=\"ban\">الحظر</TabsTrigger>\n              <TabsTrigger value=\"commentBan\">حظر التعليقات</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"view\" className=\"space-y-4 mt-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\">\n                        {targetUser?.commentsCount || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        إجمالي التعليقات\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\">\n                        {targetUser?.stats?.chaptersRead || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        فصول مقروءة\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\">\n                        {targetUser?.favoritesCount || 0}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        مفضلة\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardContent className=\"p-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-primary\">\n                        {targetUser?.joinedDaysAgo}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        يوم عضوية\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">البريد الإلكتروني:</span>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {targetUser?.email}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">تاريخ الانضمام:</span>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {new Date(targetUser?.createdAt || \"\").toLocaleDateString(\"ar\")}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">آخر نشاط:</span>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {new Date(targetUser?.lastActive || \"\").toLocaleDateString(\"ar\")}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm font-medium\">الرتبة الحالية:</span>\n                  <Badge variant=\"secondary\">\n                    {roleLabels[targetUser?.role as UserRole]}\n                  </Badge>\n                </div>\n                {targetUser?.isBanned && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">حالة الحظر:</span>\n                    <Badge variant=\"destructive\">محظور</Badge>\n                  </div>\n                )}\n                {targetUser?.isCommentBanned && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">حظر التعليقات:</span>\n                    <Badge variant=\"destructive\">محظور من التعليق</Badge>\n                  </div>\n                )}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"role\" className=\"space-y-4 mt-4\">\n              <div>\n                <Label>تغيير الرتبة</Label>\n                <Select\n                  value={targetUser?.role}\n                  onValueChange={(value) =>\n                    handleRoleChange(targetUser?.id, value as UserRole)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {Object.entries(roleLabels).map(([role, label]) => (\n                      <SelectItem key={role} value={role}>\n                        {label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"p-4 bg-muted/50 rounded-lg\">\n                <h4 className=\"font-medium mb-2\">صلاحيات الرتبة الحالية:</h4>\n                <div className=\"space-y-1 text-sm text-muted-foreground\">\n                  {targetUser?.role && rolePermissions[targetUser.role] && (\n                    <>\n                      <div>• {rolePermissions[targetUser.role].canRead ? \"يمكن القراءة\" : \"لا يمكن القراءة\"}</div>\n                      <div>• {rolePermissions[targetUser.role].canComment ? \"يمكن التعليق\" : \"لا يمكن التعليق\"}</div>\n                      <div>• {rolePermissions[targetUser.role].canUpload ? \"يمكن الرفع\" : \"لا يمكن الرفع\"}</div>\n                      <div>• {rolePermissions[targetUser.role].canModerate ? \"يمكن الإشراف\" : \"لا يمكن الإشراف\"}</div>\n                      <div>• {rolePermissions[targetUser.role].canAdmin ? \"يمكن الإدارة\" : \"لا يمكن الإدارة\"}</div>\n                    </>\n                  )}\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"ban\" className=\"space-y-4 mt-4\">\n              {targetUser?.isBanned ? (\n                <div className=\"space-y-4\">\n                  <div className=\"p-4 bg-destructive/10 border border-destructive/20 rounded-lg\">\n                    <h4 className=\"font-medium text-destructive mb-2\">المستخدم محظور</h4>\n                    <div className=\"text-sm space-y-1\">\n                      <div>السبب: {targetUser.banInfo?.reason}</div>\n                      <div>النوع: {targetUser.banInfo?.duration === \"permanent\" ? \"دائم\" : \"مؤقت\"}</div>\n                      {targetUser.banInfo?.expiresAt && (\n                        <div>ينتهي: {new Date(targetUser.banInfo.expiresAt).toLocaleDateString(\"ar\")}</div>\n                      )}\n                    </div>\n                  </div>\n                  <Button\n                    onClick={() => handleUnbanUser(targetUser.id)}\n                    className=\"w-full\"\n                    variant=\"outline\"\n                  >\n                    <UserCheck className=\"h-4 w-4 ml-2\" />\n                    رفع الحظر\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  <div>\n                    <Label>سبب الحظر</Label>\n                    <Input\n                      placeholder=\"سبب الحظر\"\n                      value={banReason}\n                      onChange={(e) => setBanReason(e.target.value)}\n                    />\n                  </div>\n                  <div>\n                    <Label>نوع الحظر</Label>\n                    <Select\n                      value={banDuration}\n                      onValueChange={(value: any) => setBanDuration(value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"temporary\">مؤقت</SelectItem>\n                        <SelectItem value=\"permanent\">دائم</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  {banDuration === \"temporary\" && (\n                    <div>\n                      <Label>عدد الأيام</Label>\n                      <Input\n                        type=\"number\"\n                        placeholder=\"عدد الأيام\"\n                        value={banDays}\n                        onChange={(e) => setBanDays(parseInt(e.target.value) || 7)}\n                      />\n                    </div>\n                  )}\n                  <Button\n                    onClick={() =>\n                      handleBanUser(\n                        targetUser.id,\n                        banReason,\n                        banDuration,\n                        banDays,\n                      )\n                    }\n                    className=\"w-full\"\n                    variant=\"destructive\"\n                    disabled={!banReason.trim()}\n                  >\n                    <Ban className=\"h-4 w-4 ml-2\" />\n                    حظر المستخدم\n                  </Button>\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"commentBan\" className=\"space-y-4 mt-4\">\n              {targetUser?.isCommentBanned ? (\n                <div className=\"p-4 bg-destructive/10 border border-destructive/20 rounded-lg\">\n                  <h4 className=\"font-medium text-destructive mb-2\">محظور من التعليقات</h4>\n                  <p className=\"text-sm text-muted-foreground\">هذا المستخدم لا يمكنه كتابة التعليقات</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  <div>\n                    <Label>سبب حظر التعليقات</Label>\n                    <Input\n                      placeholder=\"سبب منع التعليقات\"\n                      value={commentBanReason}\n                      onChange={(e) => setCommentBanReason(e.target.value)}\n                    />\n                  </div>\n                  <Button\n                    onClick={() =>\n                      handleBanFromCommenting(\n                        targetUser.id,\n                        commentBanReason,\n                        \"permanent\",\n                      )\n                    }\n                    className=\"w-full\"\n                    variant=\"destructive\"\n                    disabled={!commentBanReason.trim()}\n                  >\n                    <MessageSquare className=\"h-4 w-4 ml-2\" />\n                    حظر من التعليقات\n                  </Button>\n                </div>\n              )}\n            </TabsContent>\n          </Tabs>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  const filteredUsers = getFilteredUsers();\n  const activeUsers = users.filter(u => !u.isBanned).length;\n  const bannedUsersCount = users.filter(u => u.isBanned).length;\n  const moderators = users.filter(u => [\"admin\", \"site_admin\", \"elite_fighter\", \"tribe_leader\"].includes(u.role)).length;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <Users className=\"h-8 w-8 text-blue-500\" />\n              <div>\n                <p className=\"text-2xl font-bold\">{users.length}</p>\n                <p className=\"text-sm text-muted-foreground\">إجمالي المستخدمين</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <UserCheck className=\"h-8 w-8 text-green-500\" />\n              <div>\n                <p className=\"text-2xl font-bold\">{activeUsers}</p>\n                <p className=\"text-sm text-muted-foreground\">مستخدمون نشطون</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <Shield className=\"h-8 w-8 text-orange-500\" />\n              <div>\n                <p className=\"text-2xl font-bold\">{moderators}</p>\n                <p className=\"text-sm text-muted-foreground\">مشرفون ومديرون</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center gap-3\">\n              <Ban className=\"h-8 w-8 text-red-500\" />\n              <div>\n                <p className=\"text-2xl font-bold\">{bannedUsersCount}</p>\n                <p className=\"text-sm text-muted-foreground\">محظورون</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Search and Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle>إدارة المستخدمين</CardTitle>\n          <div className=\"flex gap-3\">\n            <div className=\"relative flex-1 max-w-sm\">\n              <Search className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"ابحث في المستخدمين...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pr-10\"\n              />\n            </div>\n            <Select value={selectedRole} onValueChange={setSelectedRole}>\n              <SelectTrigger className=\"w-[200px]\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">جميع الرتب</SelectItem>\n                {Object.entries(roleLabels).map(([role, label]) => (\n                  <SelectItem key={role} value={role}>\n                    {label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {filteredUsers.map((u) => (\n              <div\n                key={u.id}\n                className={`p-4 border rounded-lg transition-colors ${\n                  u.isBanned ? \"bg-red-50 border-red-200\" : \"hover:bg-muted/50\"\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <Avatar className=\"h-10 w-10\">\n                      <AvatarImage src={u.profile?.avatar} />\n                      <AvatarFallback>\n                        <User className=\"h-5 w-5\" />\n                      </AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <div className=\"flex items-center gap-2\">\n                        <h4 className=\"font-medium\">{u.name}</h4>\n                        <Badge variant=\"secondary\">\n                          {roleLabels[u.role]}\n                        </Badge>\n                        {u.isBanned && (\n                          <Badge variant=\"destructive\">محظور</Badge>\n                        )}\n                        {u.isCommentBanned && (\n                          <Badge variant=\"outline\" className=\"text-red-500\">\n                            حظر تعليقات\n                          </Badge>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{u.email}</p>\n                      <div className=\"flex items-center gap-4 text-xs text-muted-foreground mt-1\">\n                        <span className=\"flex items-center gap-1\">\n                          <MessageSquare className=\"h-3 w-3\" />\n                          {u.commentsCount} تعليق\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <BookOpen className=\"h-3 w-3\" />\n                          {u.stats?.chaptersRead || 0} فصل\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Heart className=\"h-3 w-3\" />\n                          {u.favoritesCount} مفضل\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Clock className=\"h-3 w-3\" />\n                          {u.joinedDaysAgo} يوم عضوية\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        setSelectedUser(u);\n                        setIsManageUserOpen(true);\n                      }}\n                    >\n                      <Settings className=\"h-4 w-4 ml-1\" />\n                      إدارة\n                    </Button>\n                    \n                    <AlertDialog\n                      open={isDeleteDialogOpen && userToDelete?.id === u.id}\n                      onOpenChange={(open) => {\n                        setIsDeleteDialogOpen(open);\n                        if (!open) setUserToDelete(null);\n                      }}\n                    >\n                      <AlertDialogTrigger asChild>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => setUserToDelete(u)}\n                          disabled={u.role === \"site_admin\"}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </AlertDialogTrigger>\n                      <AlertDialogContent>\n                        <AlertDialogHeader>\n                          <AlertDialogTitle>حذف المستخدم</AlertDialogTitle>\n                          <AlertDialogDescription>\n                            هل أنت متأكد من حذف المستخدم {userToDelete?.name}؟ هذا الإجراء لا يمكن التراجع عنه.\n                          </AlertDialogDescription>\n                        </AlertDialogHeader>\n                        <AlertDialogFooter>\n                          <AlertDialogCancel>إلغاء</AlertDialogCancel>\n                          <AlertDialogAction\n                            onClick={() => handleDeleteUser(userToDelete)}\n                            className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n                          >\n                            حذف\n                          </AlertDialogAction>\n                        </AlertDialogFooter>\n                      </AlertDialogContent>\n                    </AlertDialog>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* User Detail Modal */}\n      {selectedUser && <UserDetailModal user={selectedUser} />}\n    </div>\n  );\n}\n